{"ast":null,"code":"import _classCallCheck from \"/home/anbuthidiff/admin-forntend/node_modules/react-scripts/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/anbuthidiff/admin-forntend/node_modules/react-scripts/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"/home/anbuthidiff/admin-forntend/node_modules/react-scripts/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"/home/anbuthidiff/admin-forntend/node_modules/react-scripts/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/anbuthidiff/admin-forntend/node_modules/react-scripts/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nvar _jsxFileName = \"/home/anbuthidiff/admin-forntend/src/components/Text.js\";\n\nfunction _createSuper(Derived) { return function () { var Super = _getPrototypeOf(Derived), result; if (_isNativeReflectConstruct()) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Field } from \"formik\";\nimport { FormGroup, Input, FormFeedback, InputGroup, InputGroupAddon, InputGroupText } from \"reactstrap\";\nimport Label from \"./Label\";\nimport RenderInputGroup from \"./RenderInputGroup\";\n\nvar Text = /*#__PURE__*/function (_React$Component) {\n  _inherits(Text, _React$Component);\n\n  var _super = _createSuper(Text);\n\n  function Text(props) {\n    var _this;\n\n    _classCallCheck(this, Text);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      inputValue: \"\"\n    };\n    return _this;\n  }\n\n  _createClass(Text, [{\n    key: \"validate\",\n    value: function validate(value) {\n      var _this$props = this.props,\n          label = _this$props.label,\n          placeholder = _this$props.placeholder,\n          required = _this$props.required,\n          error = _this$props.error;\n      var errorMessage;\n      var inputLabel = label || placeholder;\n      var errorMessageLabel = error;\n\n      if ((!value || !value.trim()) && required) {\n        errorMessage = errorMessageLabel ? \"\".concat(errorMessageLabel) : \"\".concat(inputLabel, \" is required\");\n      }\n\n      return errorMessage;\n    }\n  }, {\n    key: \"renderInput\",\n    value: function renderInput(_ref) {\n      var _this2 = this;\n\n      var field = _ref.field,\n          _ref$form = _ref.form,\n          touched = _ref$form.touched,\n          errors = _ref$form.errors,\n          setFieldValue = _ref$form.setFieldValue;\n      var _this$props2 = this.props,\n          name = _this$props2.name,\n          id = _this$props2.id,\n          label = _this$props2.label,\n          placeholder = _this$props2.placeholder,\n          notify = _this$props2.notify,\n          onChange = _this$props2.onChange,\n          type = _this$props2.type,\n          maxLength = _this$props2.maxLength,\n          showCharCount = _this$props2.showCharCount,\n          defaultValue = _this$props2.defaultValue,\n          addonText = _this$props2.addonText,\n          addonType = _this$props2.addonType,\n          error = _this$props2.error,\n          onKeyDown = _this$props2.onKeyDown,\n          onClick = _this$props2.onClick;\n      var errorMessage = touched[name] && errors[name] ? errors[name] : null;\n\n      if (error) {\n        errorMessage = error;\n      }\n\n      var inputId = id || name;\n\n      var countInputChars = function countInputChars() {\n        if (_this2.state.inputValue !== undefined) {\n          return _this2.state.inputValue.length;\n        }\n\n        return 0;\n      };\n\n      var setInputValue = function setInputValue(e) {\n        var value = e.target.value;\n\n        _this2.setState({\n          inputValue: value\n        });\n      };\n\n      return /*#__PURE__*/React.createElement(FormGroup, {\n        style: {\n          position: \"relative\"\n        },\n        className: !!errorMessage && \"is-invalid\" || \"\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 7\n        }\n      }, label && /*#__PURE__*/React.createElement(Label, {\n        id: inputId,\n        notify: notify,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 11\n        }\n      }, label), /*#__PURE__*/React.createElement(RenderInputGroup, {\n        condition: addonText !== null && addonText !== undefined,\n        wrapper: function wrapper(children) {\n          return /*#__PURE__*/React.createElement(InputGroup, {\n            __self: _this2,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 91,\n              columnNumber: 32\n            }\n          }, children);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 9\n        }\n      }, addonText && /*#__PURE__*/React.createElement(InputGroupAddon, {\n        addonType: addonType,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(InputGroupText, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 15\n        }\n      }, addonText)), /*#__PURE__*/React.createElement(Input, Object.assign({\n        id: inputId\n      }, field, {\n        type: type ? type : \"text\",\n        placeholder: placeholder || label,\n        invalid: !!errorMessage,\n        defaultValue: defaultValue,\n        style: {\n          background: \"#F3F3F4\",\n          border: \"none\",\n          borderRadius: \"5px\",\n          fontSize: \"14px\",\n          height: \"40px\"\n        },\n        onKeyUp: function onKeyUp(e) {\n          setInputValue(e);\n          onChange && onChange(e);\n        },\n        onValueChange: function onValueChange(value) {\n          setFieldValue(name, value.value);\n        },\n        onKeyDown: onKeyDown,\n        maxLength: maxLength && maxLength ? maxLength : \"50\",\n        onClick: onClick && onClick,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 11\n        }\n      }))), showCharCount && /*#__PURE__*/React.createElement(\"span\", {\n        className: \"char-count d-block text-inline-grayed h7\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 11\n        }\n      }, \"\".concat(countInputChars(), \"/\").concat(maxLength ? maxLength : \"255\", \" Characters\")), errorMessage && /*#__PURE__*/React.createElement(FormFeedback, {\n        style: {\n          position: \"absolute\",\n          marginTop: 1\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 11\n        }\n      }, errorMessage));\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var name = this.props.name;\n      return /*#__PURE__*/React.createElement(Field, {\n        validate: this.validate.bind(this),\n        name: name,\n        render: this.renderInput.bind(this),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 7\n        }\n      });\n    }\n  }]);\n\n  return Text;\n}(React.Component);\n\nText.propTypes = {\n  name: PropTypes.string.isRequired,\n  id: PropTypes.string,\n  label: PropTypes.string,\n  placeholder: PropTypes.string,\n  required: PropTypes.bool,\n  defaultValue: PropTypes.any,\n  addonText: PropTypes.string,\n  addonType: PropTypes.oneOf([\"prepend\", \"append\"])\n};\nexport default Text;","map":{"version":3,"sources":["/home/anbuthidiff/admin-forntend/src/components/Text.js"],"names":["React","PropTypes","Field","FormGroup","Input","FormFeedback","InputGroup","InputGroupAddon","InputGroupText","Label","RenderInputGroup","Text","props","state","inputValue","value","label","placeholder","required","error","errorMessage","inputLabel","errorMessageLabel","trim","field","form","touched","errors","setFieldValue","name","id","notify","onChange","type","maxLength","showCharCount","defaultValue","addonText","addonType","onKeyDown","onClick","inputId","countInputChars","undefined","length","setInputValue","e","target","setState","position","children","background","border","borderRadius","fontSize","height","marginTop","validate","bind","renderInput","Component","propTypes","string","isRequired","bool","any","oneOf"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Field } from \"formik\";\nimport {\n  FormGroup,\n  Input,\n  FormFeedback,\n  InputGroup,\n  InputGroupAddon,\n  InputGroupText\n} from \"reactstrap\";\nimport Label from \"./Label\";\nimport RenderInputGroup from \"./RenderInputGroup\";\n\nclass Text extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      inputValue: \"\"\n    };\n  }\n\n  validate(value) {\n    const { label, placeholder, required, error } = this.props;\n\n    let errorMessage;\n    const inputLabel = label || placeholder;\n    const errorMessageLabel = error;\n\n    if ((!value || !value.trim()) && required) {\n      errorMessage = errorMessageLabel\n        ? `${errorMessageLabel}`\n        : `${inputLabel} is required`;\n    }\n\n    return errorMessage;\n  }\n\n  renderInput({ field, form: { touched, errors, setFieldValue } }) {\n    const {\n      name,\n      id,\n      label,\n      placeholder,\n      notify,\n      onChange,\n      type,\n      maxLength,\n      showCharCount,\n      defaultValue,\n      addonText,\n      addonType,\n      error,\n      onKeyDown,\n      onClick\n    } = this.props;\n\n    let errorMessage = touched[name] && errors[name] ? errors[name] : null;\n    if (error) {\n      errorMessage = error;\n    }\n\n    const inputId = id || name;\n\n    const countInputChars = () => {\n      if (this.state.inputValue !== undefined) {\n        return this.state.inputValue.length;\n      }\n      return 0;\n    };\n\n    const setInputValue = e => {\n      const { value } = e.target;\n      this.setState({\n        inputValue: value\n      });\n    };\n\n    return (\n      <FormGroup\n        style={{ position: \"relative\" }}\n        className={(!!errorMessage && \"is-invalid\") || \"\"}\n      >\n        {label && (\n          <Label id={inputId} notify={notify}>\n            {label}\n          </Label>\n        )}\n        <RenderInputGroup\n          condition={addonText !== null && addonText !== undefined}\n          wrapper={children => <InputGroup>{children}</InputGroup>}\n        >\n          {addonText && (\n            <InputGroupAddon addonType={addonType}>\n              <InputGroupText>{addonText}</InputGroupText>\n            </InputGroupAddon>\n          )}\n          <Input\n            id={inputId}\n            {...field}\n            type={type ? type : \"text\"}\n            placeholder={placeholder || label}\n            invalid={!!errorMessage}\n            defaultValue={defaultValue}\n            style={{\n              background: \"#F3F3F4\",\n              border: \"none\",\n              borderRadius: \"5px\",\n              fontSize: \"14px\",\n              height: \"40px\"\n            }}\n            onKeyUp={e => {\n              setInputValue(e);\n              onChange && onChange(e);\n            }}\n            onValueChange={value => {\n              setFieldValue(name, value.value);\n            }}\n            onKeyDown={onKeyDown}\n            maxLength={maxLength && maxLength ? maxLength : \"50\"}\n            onClick={onClick && onClick}\n          />\n        </RenderInputGroup>\n        {showCharCount && (\n          <span className=\"char-count d-block text-inline-grayed h7\">\n            {`${countInputChars()}/${maxLength ? maxLength : \"255\"} Characters`}\n          </span>\n        )}\n\n        {errorMessage && (\n          <FormFeedback style={{ position: \"absolute\", marginTop: 1 }}>\n            {errorMessage}\n          </FormFeedback>\n        )}\n      </FormGroup>\n    );\n  }\n\n  render() {\n    const { name } = this.props;\n\n    return (\n      <Field\n        validate={this.validate.bind(this)}\n        name={name}\n        render={this.renderInput.bind(this)}\n      />\n    );\n  }\n}\n\nText.propTypes = {\n  name: PropTypes.string.isRequired,\n  id: PropTypes.string,\n  label: PropTypes.string,\n  placeholder: PropTypes.string,\n  required: PropTypes.bool,\n  defaultValue: PropTypes.any,\n  addonText: PropTypes.string,\n  addonType: PropTypes.oneOf([\"prepend\", \"append\"])\n};\n\nexport default Text;\n"]},"metadata":{},"sourceType":"module"}