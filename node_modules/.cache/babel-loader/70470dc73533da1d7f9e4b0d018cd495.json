{"ast":null,"code":"import _objectSpread from \"/home/anbuthidiff/admin-forntend/node_modules/react-scripts/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport { REQUEST_DASHBOARD_COUNT, RECEIVE_DASHBOARD_COUNT, FETCH_DASHBOARDD_COUNT_FAIL } from \"../constants/ActionTypes\";\nexport function dashboardReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {\n    isFetching: false\n  };\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case REQUEST_DASHBOARD_COUNT:\n      return Object.assign({}, state, {\n        isFetching: true\n      });\n\n    case RECEIVE_DASHBOARD_COUNT:\n      {\n        return Object.assign({}, state, {\n          isFetching: false\n        }, action.payload);\n      }\n\n    case FETCH_DASHBOARDD_COUNT_FAIL:\n      {\n        return _objectSpread({}, state, {\n          isFetching: false\n        });\n      }\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["/home/anbuthidiff/admin-forntend/src/reducers/dashboardReducer.js"],"names":["REQUEST_DASHBOARD_COUNT","RECEIVE_DASHBOARD_COUNT","FETCH_DASHBOARDD_COUNT_FAIL","dashboardReducer","state","isFetching","action","type","Object","assign","payload"],"mappings":";AAAA,SACEA,uBADF,EAEEC,uBAFF,EAGEC,2BAHF,QAIO,0BAJP;AAMA,OAAO,SAASC,gBAAT,GAKL;AAAA,MAJAC,KAIA,uEAJQ;AACNC,IAAAA,UAAU,EAAE;AADN,GAIR;AAAA,MADAC,MACA;;AACA,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKP,uBAAL;AACE,aAAOQ,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBL,KAAlB,EAAyB;AAC9BC,QAAAA,UAAU,EAAE;AADkB,OAAzB,CAAP;;AAGF,SAAKJ,uBAAL;AAA8B;AAC5B,eAAOO,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBL,KAAlB,EAAyB;AAAEC,UAAAA,UAAU,EAAE;AAAd,SAAzB,EAAgDC,MAAM,CAACI,OAAvD,CAAP;AACD;;AACD,SAAKR,2BAAL;AAAkC;AAChC,iCAAYE,KAAZ;AAAmBC,UAAAA,UAAU,EAAE;AAA/B;AACD;;AACD;AACE,aAAOD,KAAP;AAZJ;AAcD","sourcesContent":["import {\n  REQUEST_DASHBOARD_COUNT,\n  RECEIVE_DASHBOARD_COUNT,\n  FETCH_DASHBOARDD_COUNT_FAIL\n} from \"../constants/ActionTypes\";\n\nexport function dashboardReducer(\n  state = {\n    isFetching: false\n  },\n  action\n) {\n  switch (action.type) {\n    case REQUEST_DASHBOARD_COUNT:\n      return Object.assign({}, state, {\n        isFetching: true\n      });\n    case RECEIVE_DASHBOARD_COUNT: {\n      return Object.assign({}, state, { isFetching: false }, action.payload);\n    }\n    case FETCH_DASHBOARDD_COUNT_FAIL: {\n      return { ...state, isFetching: false };\n    }\n    default:\n      return state;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}